### Variables
#
# Mod key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | wofi --show drun -i | xargs swaymsg exec --

font pango:Roboto Mono Medium Nerd Font Complete 10

# Clipboard
# exec wl-paste -t text --watch clipman store 1>> /tmp/clipman.log 2>&1 &
# exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json" >> /tmp/clipman.log 2>&1 &
# exec clipman restore
exec wl-clipboard-manager -t

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable; exec 'setxkbmap us; swaylock -f --screenshots --effect-pixelate 10; systemctl suspend-then-hibernate'
bindswitch --reload --locked lid:off output $laptop enable
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'setxkbmap us; swaylock -f --screenshots --effect-pixelate 10' \
         timeout 600 'systemctl suspend-then-hibernate'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
for_window [app_id="Google-chrome"] inhibit_idle fullscreen
for_window [instance="vlc"] inhibit_idle fullscreen
for_window [app_id="org.pwmt.zathura"] inhibit_idle visible

# Redshift
exec wlsunset -l 50.45 -L 30.52

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Touchpad
input "type:touchpad" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

# Keyboard
input "type:keyboard" {
    xkb_layout us,ru,ua
    xkb_options grp:win_space_toggle,ctrl:swapcaps_hyper
}

input "type:keyboard" {
    repeat_delay 500
    repeat_rate 25
}

### Key bindings
# Fix for multiple languages
set $bindsym bindsym --to-code

#
# Basics:
#
# Start a terminal
$bindsym $mod+Return exec kitty

# Kill focused window
$bindsym $mod+Shift+q kill

# Start your launcher
$bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
$bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
$bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Notifications
$bindsym Mod1+Space exec makoctl dismiss
$bindsym Ctrl+grave exec makoctl restore
$bindsym Ctrl+Shift+period exec makoctl menu wofi -d -p 'Choose Action: '

#
# Moving around:
#
# Move your focus around
$bindsym $mod+$left focus left
$bindsym $mod+$down focus down
$bindsym $mod+$up focus up
$bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
$bindsym $mod+Left focus left
$bindsym $mod+Down focus down
$bindsym $mod+Up focus up
$bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
$bindsym $mod+Shift+$left move left
$bindsym $mod+Shift+$down move down
$bindsym $mod+Shift+$up move up
$bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
$bindsym $mod+Shift+Left move left
$bindsym $mod+Shift+Down move down
$bindsym $mod+Shift+Up move up
$bindsym $mod+Shift+Right move right
#
# Workspaces:
#
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"

# Assign workspaces to outputs
workspace $ws1 output eDP-1
workspace $ws2 output DP-1 eDP-1
workspace $ws3 output DP-1 eDP-1
workspace $ws4 output DP-1 eDP-1
workspace $ws5 output DP-1 eDP-1
workspace $ws6 output DP-1 eDP-1
workspace $ws7 output DP-1 eDP-1
workspace $ws8 output DP-1 eDP-1
workspace $ws9 output DP-1 eDP-1

# Switch to workspace
$bindsym $mod+1 workspace $ws1
$bindsym $mod+2 workspace $ws2
$bindsym $mod+3 workspace $ws3
$bindsym $mod+4 workspace $ws4
$bindsym $mod+5 workspace $ws5
$bindsym $mod+6 workspace $ws6
$bindsym $mod+7 workspace $ws7
$bindsym $mod+8 workspace $ws8
$bindsym $mod+9 workspace $ws9

# Move focused container to workspace
$bindsym $mod+Shift+1 move container to workspace $ws1
$bindsym $mod+Shift+2 move container to workspace $ws2
$bindsym $mod+Shift+3 move container to workspace $ws3
$bindsym $mod+Shift+4 move container to workspace $ws4
$bindsym $mod+Shift+5 move container to workspace $ws5
$bindsym $mod+Shift+6 move container to workspace $ws6
$bindsym $mod+Shift+7 move container to workspace $ws7
$bindsym $mod+Shift+8 move container to workspace $ws8
$bindsym $mod+Shift+9 move container to workspace $ws9

#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
$bindsym $mod+b splith
$bindsym $mod+v splitv

# Switch the current container between different layout styles
$bindsym $mod+s layout stacking
$bindsym $mod+w layout tabbed
$bindsym $mod+e layout toggle split

# Make the current focus fullscreen
$bindsym $mod+f fullscreen toggle

# Toggle the current focus between tiling and floating mode
$bindsym $mod+Shift+space floating toggle
floating_minimum_size 256 x 144
floating_maximum_size 1280 x 720

# Swap focus between the tiling area and the floating area
$bindsym $mod+Ctrl+space focus mode_toggle

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
$bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
$bindsym $mod+minus scratchpad show

$bindsym $mod+i [app_id="scratchterm"] scratchpad show
for_window [app_id="scratchterm"] move to absolute position center
for_window [app_id="scratchterm"] floating enable sticky enable
for_window [app_id="scratchterm"] move scratchpad
for_window [app_id="scratchterm"] resize set 920 600

#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
	$bindsym $left resize shrink width 10px
		$bindsym $down resize grow height 10px
		$bindsym $up resize shrink height 10px
		$bindsym $right resize grow width 10px

# Ditto, with arrow keys
		$bindsym Left resize shrink width 10px
		$bindsym Down resize grow height 10px
		$bindsym Up resize shrink height 10px
		$bindsym Right resize grow width 10px

# Return to default mode
		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}
$bindsym $mod+r mode "resize"

#
# Status Bar:
#
bar {
	mode hide
		strip_workspace_numbers yes
# font pango:RobotoMono 10
# font pango:JetBrainsMono Nerd Font 10
    # font pango:DejaVu Sans Mono 10
		height 18
		position bottom
# output primary
		status_command bumblebee-status -m arch-update disk cpu2 memory traffic \
		bluetooth datetime pasink battery \
		-p cpu2.layout=cpu2.coresload disk.open=nnn pulseaudio.limit=100 \
		pulseaudio.showbars=1 time.format="%H:%M CW %V" date.format="%a, %b %d %Y" \
		nic.states=^down traffic.showname=False \
		traffic.exclude=lo,virbr,docker,vboxnet,veth,ppp \
		-a disk \
		-t onedark-powerline
}

#################
#  KeyBindings  #
#################

# Brightness
bindsym XF86MonBrightnessUp exec sh -c "brightnessctl set 5%+; ${HOME}/.local/bin/brightness-notification.sh"
bindsym XF86MonBrightnessDown exec sh -c "brightnessctl set 5%-; ${HOME}/.local/bin/brightness-notification.sh"

# screenshot
bindsym Print exec grim -g "$(slurp)" - | wl-copy
bindsym Shift+Print exec grim - | wl-copy
bindsym Control+Print exec grim -g "$(slurp)" 
bindsym Control+Shift+Print exec grim

# toggle sticky
$bindsym $mod+Shift+s sticky toggle
$bindsym $mod+o exec kitty --class nnn ${HOME}/.local/bin/n
$bindsym $mod+g exec google-chrome-stable
# $bindsym $mod+t exec i3-layout-manager

# set volume control
bindsym XF86AudioRaiseVolume exec --no-startup-id bash -c "pactl set-sink-volume @DEFAULT_SINK@ +5%; ${HOME}/.local/bin/audio-notification.sh"
bindsym XF86AudioLowerVolume exec --no-startup-id bash -c "pactl set-sink-volume @DEFAULT_SINK@ -5%; ${HOME}/.local/bin/audio-notification.sh"
bindsym XF86AudioMute exec --no-startup-id bash -c "pactl set-sink-mute @DEFAULT_SINK@ toggle; ${HOME}/.local/bin/audio-notification.sh"

# $bindsym XF86AudioRaiseVolume exec 
# $bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
# $bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# $bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Media
$bindsym XF86AudioPlay exec playerctl play-pause
$bindsym XF86AudioNext exec playerctl next
$bindsym XF86AudioPrev exec playerctl previous
# $bindsym XF86Search exec bemenu-run

###########
#  Modes  #
###########

# Set shut down, restart and locking features
set $mode_system (l)ock, log(o)ut, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
$bindsym $mod+0 mode "$mode_system"
mode "$mode_system" {
	$bindsym l exec "setxkbmap us; exec swaylock -f --screenshots --effect-pixelate 10"; mode default
		$bindsym s exec "setxkbmap us; exec swaylock -f --screenshots --effect-pixelate 10; systemctl suspend-then-hibernate"; mode default
		$bindsym o exec "swaymsg exit"; mode default
		$bindsym h exec "setxkbmap us; exec swaylock -f --screenshots --effect-pixelate 10; systemctl hibernate"; mode default
		$bindsym r exec "systemctl reboot"; mode default
		$bindsym Shift+s "exec systemctl reboot"; mode default

# exit system mode: "Enter" or "Escape"
		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}

# Change language mode
$bindsym $mod+space exec setxkbmap us; mode "$mode_lang"
set $mode_lang (e)nglish, (u)krainian, (r)ussian
mode "$mode_lang" {
	$bindsym r exec "setxkbmap -layout ru,us"; mode "default"
		$bindsym e exec "setxkbmap -layout us,us"; mode "default"
		$bindsym u exec "setxkbmap -layout ua,us"; mode "default"

# exit system mode: "Enter" or "Escape"
		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}

##########
#  Gaps  #
##########

gaps inner 10
gaps outer 20

smart_gaps inverse_outer

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
$bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
	$bindsym o	   mode "$mode_gaps_outer"
		$bindsym i	   mode "$mode_gaps_inner"
		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
	$bindsym plus  gaps inner current plus 5
		$bindsym minus gaps inner current minus 5
		$bindsym 0	  gaps inner current set 0

		$bindsym Shift+plus	gaps inner all plus 5
		$bindsym Shift+minus gaps inner all minus 5
		$bindsym Shift+0		gaps inner all set 0

		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
	$bindsym plus  gaps outer current plus 5
		$bindsym minus gaps outer current minus 5
		$bindsym 0	  gaps outer current set 0

		$bindsym Shift+plus	gaps outer all plus 5
		$bindsym Shift+minus gaps outer all minus 5
		$bindsym Shift+0		gaps outer all set 0

		$bindsym Return mode "default"
		$bindsym Escape mode "default"
}
############################
#  Autostart applications  #
############################

# exec /usr/lib/polkit-1/polkitd

exec mako
exec /usr/lib/polkit-kde-authentication-agent-1
exec /usr/lib/pam_kwallet_init
exec wal -Rst
exec variety
exec picom -b --experimental-backends
exec udiskie
exec kanshi
# exec fix_xcursor

exec rescuetime
# exec telegram-desktop
# exec xidlehook --not-when-fullscreen --not-when-audio --timer normal 600 'setxkbmap us; swaylock -f --screenshots --effect-pixelate 10' ''
exec kitty --class scratchterm

exec nm-applet
# exec xrdb ~/.Xresoursesx

#
# Opacity
#
set $opacity 0.95
# for_window [app_id="kitty"] opacity $opacity
# for_window [app_id="scratchterm"] opacity $opacity
# for_window [app_id=".*"] opacity $opacity

###################
#  Apps specific  #
###################

no_focus [app_id="telegramdesktop"]
no_focus [instance="youtube"]
no_focus [app_id="nnn"]
no_focus [app_id="cht.sh"]

assign [app_id="Google-chrome"] $ws2
assign [app_id="kitty"] $ws3
assign [app_id="telegramdesktop"] $ws4
assign [instance="youtube"] $ws5
assign [app_id="nnn"] $ws6
assign [app_id="cht.sh"] $ws7
assign [app_id="debug"] $ws9
assign [app_id="main.py"] output primary

############
#  Border  #
############

default_border pixel 4
default_floating_border pixel 4

# hide_edge_borders both

$bindsym $mod+u border none
$bindsym $mod+y border pixel 4
$bindsym $mod+n border normal

include /etc/sway/config.d/*
